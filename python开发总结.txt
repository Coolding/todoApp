python开发总结

==================================================================================================================
Python自带的json.dumps方法序列化数据时候如果格式化的数据中有datetime类型数据时候会提示错误
TypeError: datetime.datetime(2012, 12, 12, 15, 47, 15) is not JSON serializable
解决方法:
在代码里面增加class CJsonEncoder(json.JSONEncoder):  
    def default(self, obj):  
        if isinstance(obj, datetime.datetime):  
            return obj.strftime('%Y-%m-%d %H:%M:%S')  
        elif isinstance(obj, date):  
            return obj.strftime("%Y-%m-%d")  
        else:  
            return json.JSONEncoder.default(self, obj)  
然后把原来的return json.dumps(results)改成return json.dumps(results,cls=CJsonEncoder) 
==================================================================================================================
初始化一个集合set
LvSet= set([])

==================================================================================================================
if not 1=true:  #使用not

======================================================================================================================
字符串转数组
str = '1,2,3'
arr = str.split(',')
数组转字符串
arr = ['a','b']
str = ','.join(arr)

arr = [1,2,3]
str = ','.join(str(i) for i in b)

======================================================================================================================
Python返回数组（List）长度的方法

　其实很简单，用len函数：

>>> array = [0,1,2,3,4,5]
>>> print len(array)

===================================================================================================
Python使用datetime模块timedelta实现日期时间相加：
python计算明天的日期：
from datetime import datetime
from datetime import timedelta

now = datetime.now()
aDay = timedelta(days=1)
now = now + aDay
print now.strftime('%Y-%m-%d')

当前日期时间的格式化字符串
time.strftime('%Y-%m-%d %H:%M:%S')  //字符串类型

当前时间
import datetime
datetime.datetime.now()  //时间类型变量

字符串转化为日期格式
StartStudyTime='2017-08-13 09:57:34'
da=time.strptime(StartStudyTime,"%Y-%m-%d %H:%M:%S")   #先将字符串转化为time类型
da1=datetime.datetime(da[0],da[1],da[2],da[3],da[4],da[5])    #将time类型转化为datetime.datetime类型，以便于后面相减计算学习的时长
有没有一步转化的方法？


两个日期相减
print (d1 - d2).days  #计算两个日期相差天数的计算。

starttime = datetime.datetime.now()
endtime = datetime.datetime.now()
print (endtime - starttime).seconds  #计算运行时间的例子（相差的秒数）